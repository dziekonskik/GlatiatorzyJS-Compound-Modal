{"version":3,"sources":["modalContext.js","Modal/Header.js","Modal/Content.js","Modal/Footer.js","Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["ModalContext","React","createContext","Header","Consumer","toggle","className","props","title","onClick","Component","Content","children","this","Footer","callToActionLabelFn","fn","window","alert","callToActionLabel","Modal","handleClickOutside","event","console","log","target","modal","createRef","state","addEventListener","removeEventListener","isOpen","Children","map","child","cloneElement","ref","App","setState","prevState","Provider","value","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAIeA,EAFMC,IAAMC,gBCgBZC,EAff,uKACY,IAAD,OACP,OACE,cAAC,EAAaC,SAAd,UACG,SAACC,GAAD,OACC,yBAAQC,UAAU,SAAlB,UACE,8BAAM,EAAKC,MAAMC,QACjB,wBAAQC,QAASJ,EAAjB,6BAPZ,GAA4BK,aCMbC,EAPf,uKACY,IACAC,EAAaC,KAAKN,MAAlBK,SACR,OAAO,qBAAKN,UAAU,UAAf,SAA0BM,QAHrC,GAA6BF,aCuBdI,EAtBf,4MACEC,oBAAsB,SAACC,GACrBC,OAAOC,MAAM,MACbF,KAHJ,uDAMY,IAAD,OACP,OACE,cAAC,EAAaZ,SAAd,UACG,SAACC,GAAD,OACC,sBAAKC,UAAU,SAAf,UACE,wBAAQG,QAASJ,EAAjB,oBACA,wBAAQI,QAAS,kBAAM,EAAKM,oBAAoBV,IAAhD,SACG,EAAKE,MAAMY,8BAb1B,GAA4BT,aCEfU,EAAb,kDACE,WAAYb,GAAQ,IAAD,8BACjB,cAAMA,IASRc,mBAAqB,SAACC,GACpBC,QAAQC,IAAIF,EAAMG,QACa,gBAA3BH,EAAMG,OAAOnB,WAA6B,EAAKC,MAAMF,UAVzD,EAAKqB,MAAQzB,IAAM0B,YACnB,EAAKC,MAAQ,GAHI,EADrB,gEAiBIX,OAAOY,iBAAiB,QAAShB,KAAKQ,sBAjB1C,6CAqBIJ,OAAOa,oBAAoB,QAASjB,KAAKQ,sBArB7C,+BAwBY,IAAD,EACoBR,KAAKN,MAAxBwB,EADD,EACCA,OAAQ1B,EADT,EACSA,OACVO,EAAWX,IAAM+B,SAASC,IAAIpB,KAAKN,MAAMK,UAAU,SAACsB,GAAD,OACvDjC,IAAMkC,aAAaD,EAAO,CAAEH,SAAQ1B,OAAQA,OAG9C,OACE,uBAAOC,UAAU,cAAjB,SACE,qBAAK8B,IAAKvB,KAAKa,MAAOpB,UAAU,cAAhC,SACGM,UAjCX,GAA2BF,aAAdU,EAOJjB,OAASA,EAPLiB,EAQJT,QAAUA,EARNS,EASJN,OAASA,EA+BHM,QCTAiB,G,kNA/BbT,MAAQ,CACNG,QAAQ,G,EAGV1B,OAAS,WACP,EAAKiC,UAAS,SAACC,GACb,MAAO,CAAER,QAASQ,EAAUR,Y,uDAItB,IACAA,EAAWlB,KAAKe,MAAhBG,OACR,OACE,cAAC,EAAaS,SAAd,CAAuBC,MAAO5B,KAAKR,OAAnC,SACE,sBAAKC,UAAU,MAAf,WACIyB,GAAU,wBAAQtB,QAASI,KAAKR,OAAtB,0BACX0B,GACC,eAAC,EAAD,CAAOA,OAAQA,EAAQ1B,OAAQQ,KAAKR,OAApC,UACE,cAAC,EAAMF,OAAP,CAAcK,MAAO,sBACrB,cAAC,EAAMG,QAAP,UACE,oEAEF,cAAC,EAAMG,OAAP,CAAcK,kBAAmB,oC,GAvB7BT,cCQHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.d33ace69.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ModalContext = React.createContext();\r\n\r\nexport default ModalContext;\r\n","import React, { Component } from 'react';\r\nimport ModalContext from '../modalContext';\r\n\r\nexport class Header extends Component {\r\n  render() {\r\n    return (\r\n      <ModalContext.Consumer>\r\n        {(toggle) => (\r\n          <header className=\"Header\">\r\n            <div>{this.props.title}</div>\r\n            <button onClick={toggle}>Close</button>\r\n          </header>\r\n        )}\r\n      </ModalContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from 'react';\r\n\r\nexport class Content extends Component {\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div className=\"Content\">{children}</div>;\r\n  }\r\n}\r\n\r\nexport default Content;\r\n","import React, { Component } from 'react';\r\nimport ModalContext from '../modalContext';\r\n\r\nexport class Footer extends Component {\r\n  callToActionLabelFn = (fn) => {\r\n    window.alert('OK');\r\n    fn();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <ModalContext.Consumer>\r\n        {(toggle) => (\r\n          <div className=\"Footer\">\r\n            <button onClick={toggle}>Cancel</button>\r\n            <button onClick={() => this.callToActionLabelFn(toggle)}>\r\n              {this.props.callToActionLabel}\r\n            </button>\r\n          </div>\r\n        )}\r\n      </ModalContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from 'react';\r\nimport Header from './Header';\r\nimport Content from './Content';\r\nimport Footer from './Footer';\r\n\r\nexport class Modal extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.modal = React.createRef();\r\n    this.state = {};\r\n  }\r\n\r\n  static Header = Header;\r\n  static Content = Content;\r\n  static Footer = Footer;\r\n\r\n  handleClickOutside = (event) => {\r\n    console.log(event.target);\r\n    if (event.target.className === 'Modal-outer') this.props.toggle();\r\n  };\r\n\r\n  componentDidMount() {\r\n    window.addEventListener('click', this.handleClickOutside);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener('click', this.handleClickOutside);\r\n  }\r\n\r\n  render() {\r\n    const { isOpen, toggle } = this.props;\r\n    const children = React.Children.map(this.props.children, (child) =>\r\n      React.cloneElement(child, { isOpen, toggle: toggle })\r\n    );\r\n\r\n    return (\r\n      <aside className=\"Modal-outer\">\r\n        <div ref={this.modal} className=\"Modal-inner\">\r\n          {children}\r\n        </div>\r\n      </aside>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React, { Component } from 'react';\nimport Modal from './Modal/Modal';\nimport ModalContext from './modalContext';\nimport './App.css';\nclass App extends Component {\n  state = {\n    isOpen: false,\n  };\n\n  toggle = () => {\n    this.setState((prevState) => {\n      return { isOpen: !prevState.isOpen };\n    });\n  };\n\n  render() {\n    const { isOpen } = this.state;\n    return (\n      <ModalContext.Provider value={this.toggle}>\n        <div className=\"App\">\n          {!isOpen && <button onClick={this.toggle}>Toggle Modal</button>}\n          {isOpen && (\n            <Modal isOpen={isOpen} toggle={this.toggle}>\n              <Modal.Header title={'Tytuł modala'} />\n              <Modal.Content>\n                <h1>to powinno tak działać</h1>\n              </Modal.Content>\n              <Modal.Footer callToActionLabel={'Udało się'} />\n            </Modal>\n          )}\n        </div>\n      </ModalContext.Provider>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'typeface-roboto';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}